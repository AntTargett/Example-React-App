{"version":3,"sources":["HomeContainer/TablePaginationContainer/TablePaginationContainer.tsx","util/useDebounce.tsx","util/mapData.tsx","util/util.tsx","HomeContainer/HomeContainer.tsx"],"names":["areMoreResults","dataLength","pageNumber","results","limit","loading","areLessResults","TablePagination","_ref","changePage","currentQueryParams","pieData","totalResults","displayResults","Object","core_browser_esm","react","IconButton_default","a","aria-label","color","onClick","_page","disabled","KeyboardArrowLeft_default","length","_limit","KeyboardArrowRight_default","useDebounce","value","delay","_useState","useState","_useState2","slicedToArray","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","mapData","data","displayData","forEach","pieItem","TableRow","displayName","storeName","store","price","priceString","address","quantity","rating","contact","mobile","push","buildQueryString","queryParams","queryString","entries","item","concat","columns","dataName","title","sort","HomeContainer","setPieData","_useState3","_useState4","searchTerm","setSearchTerm","_useState5","_useState6","setLoading","_useState7","_useState8","setTotalResults","themeState","useTheme","_useState9","_order","_sort","_useState10","setQueryParams","getPies","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","axios","get","sent","headers","stop","_x","apply","this","arguments","debouncedSearchTerm","getDisplayResults","pieDataLength","from","to","ErrorBoundry","HomeContainerComponents","commonComponents","style","flex","control","checked","darkmode","onChange","toggle","label","react_router_dom","index_es","header","headerCustomContent","id","event","query","searchFunction","target","InputProps","startAdornment","Search_default","TablePaginationContainer","sortCallback","_ref2","columnName","order","sortFunction"],"mappings":"yQASMA,EAAiB,SAACC,EAAoBC,EAAoBC,EAAiBC,EAAeC,GAE/F,OAAOA,GAAkBF,GADRD,EAAa,GAAKE,EAAQH,GAItCK,EAAiB,SAACJ,EAAoBG,GAArB,OAA2CA,GAAkBH,EAAa,GAoDlFK,EAlDS,SAAAC,GAAA,IACvBC,EADuBD,EACvBC,WACAC,EAFuBF,EAEvBE,mBACAC,EAHuBH,EAGvBG,QACAN,EAJuBG,EAIvBH,QACAO,EALuBJ,EAKvBI,aACAC,EANuBL,EAMvBK,eANuB,OAQvBC,OAAAC,EAAA,EAAAD,CAACE,EAAA,SAAD,KACEH,EACDC,OAAAC,EAAA,EAAAD,CAACG,EAAAC,EAAD,CACCC,aAAW,uBAEXC,MAAM,UACNC,QAAS,kBACRZ,EAAWH,EAAeI,EAAmBY,MAAOjB,IAAYK,EAAmBY,MAAQ,IAE5FC,UAAWjB,EAAeI,EAAmBY,MAAOjB,IAEpDS,OAAAC,EAAA,EAAAD,CAACU,EAAAN,EAAD,OAEDJ,OAAAC,EAAA,EAAAD,CAACG,EAAAC,EAAD,CACCE,MAAM,UACND,aAAW,0BACXE,QAAS,kBACRZ,EACCT,EACCW,EAAUA,EAAQc,OAAS,EAC3Bf,EAAmBY,MACnBV,EACAF,EAAmBgB,OACnBrB,IACIK,EAAmBY,MAAQ,IAGlCC,UACEvB,EACAW,EAAUA,EAAQc,OAAS,EAC3Bf,EAAmBY,MACnBV,EACAF,EAAmBgB,OACnBrB,IAIFS,OAAAC,EAAA,EAAAD,CAACa,EAAAT,EAAD,SCxCYU,EAhBK,SAACC,EAAeC,GAAkB,IAAAC,EACTC,mBAASH,GADAI,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAiB,EAAA,GAC9CI,EAD8CF,EAAA,GAC9BG,EAD8BH,EAAA,GAarD,OAVAI,oBAAU,WACT,IAAMC,EAAUC,WAAW,WAC1BH,EAAkBP,IAChBC,GACH,OAAO,WAENU,aAAaF,KAEZ,CAACT,IAEGM,WCGOM,EAlBC,SAACC,GAChB,IAAMC,EAA8B,GAcpC,OAbAD,EAAKE,QAAQ,SAACC,GACb,IAAMC,EAAyB,CAC9BC,YAAaF,EAAQE,YACrBC,UAAWH,EAAQI,MAAMF,YACzBG,MAAOL,EAAQK,MACfC,YAAaN,EAAQM,YACrBC,QAASP,EAAQI,MAAMG,QACvBC,SAAUR,EAAQQ,SAClBC,OAAQT,EAAQI,MAAMK,OACtBC,QAASV,EAAQI,MAAMO,QAExBb,EAAYc,KAAKX,KAEXH,GCfKe,EAAmB,SAACC,GAChC,IAAIC,EAAc,GAOlB,OALA9C,OAAO+C,QAAQF,GAAaf,QAAQ,SAAAkB,GACnB,KAAZA,EAAK,KACRF,GAAW,IAAAG,OAAQD,EAAK,GAAb,KAAAC,OAAmBD,EAAK,OAG9BF,mBCqBFI,EAAU,CACf,CACCC,SAAU,cACVC,MAAO,YACPC,MAAM,GAEP,CACCF,SAAU,cACVC,MAAO,QACPC,MAAM,GAEP,CACCF,SAAU,WACVC,MAAO,WACPC,MAAM,GAEP,CACCF,SAAU,YACVC,MAAO,aACPC,MAAM,GAEP,CAAEF,SAAU,UAAWC,MAAO,UAAWC,MAAM,GAC/C,CAAEF,SAAU,SAAUC,MAAO,SAAUC,MAAM,GAC7C,CAAEF,SAAU,UAAWC,MAAO,SAAUC,MAAM,IA+IhCC,UA5IO,WAAM,IAAArC,EAEGC,qBAFHC,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAiB,EAAA,GAEpBpB,EAFoBsB,EAAA,GAEXoC,EAFWpC,EAAA,GAAAqC,EAIStC,mBAAS,IAJlBuC,EAAAzD,OAAAoB,EAAA,EAAApB,CAAAwD,EAAA,GAIpBE,EAJoBD,EAAA,GAIRE,EAJQF,EAAA,GAAAG,EAMG1C,oBAAS,GANZ2C,EAAA7D,OAAAoB,EAAA,EAAApB,CAAA4D,EAAA,GAMpBrE,EANoBsE,EAAA,GAMXC,EANWD,EAAA,GAAAE,EAQa7C,mBAAS,GARtB8C,EAAAhE,OAAAoB,EAAA,EAAApB,CAAA+D,EAAA,GAQpBjE,EARoBkE,EAAA,GAQNC,EARMD,EAAA,GAUrBE,EAAaC,cAVQC,EAYkBlD,mBAAoB,CAChEmD,OAAQ,GACRC,MAAO,GACPrC,YAAa,GACbzB,MAAO,EACPI,OAAQ,IAjBkB2D,EAAAvE,OAAAoB,EAAA,EAAApB,CAAAoE,EAAA,GAYpBxE,EAZoB2E,EAAA,GAYAC,EAZAD,EAAA,GAsBrBE,EAAO,eAAA/E,EAAAM,OAAA0E,EAAA,EAAA1E,CAAA2E,EAAAvE,EAAAwE,KAAG,SAAAC,EAAOhC,GAAP,IAAAiC,EAAAjD,EAAA,OAAA8C,EAAAvE,EAAA2E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACfpB,GAAW,GADIkB,EAAAE,KAAA,EAEMC,IAAMC,IAJZ,2DAI0BxC,EAAiBC,IAF3C,OAETiC,EAFSE,EAAAK,KAITxD,EAAcF,EAAQmD,EAAOlD,MACnC2B,EAAW1B,GACXoC,EAAgBa,EAAOQ,QAAQ,kBAC/BxB,GAAW,GAPI,wBAAAkB,EAAAO,SAAAV,MAAH,gBAAAW,GAAA,OAAA9F,EAAA+F,MAAAC,KAAAC,YAAA,GAUPC,EAAsB9E,EAAY4C,EAAY,KAGpDnC,oBAAU,WACTkD,EAAQ7E,IACN,CAACgG,IAEJ,IAkBMC,EAAoB,WACzB,IAAMC,EAAgBjG,EAAUA,EAAQc,OAAS,EAC3CoF,GAAQnG,EAAmBY,MAAQ,GAAKZ,EAAmBgB,OAC3DoF,EAAKD,EAAOD,EAElB,SAAA7C,OAAU8C,EAAV,QAAA9C,OAAqB+C,IAGhBrG,EAAa,SAACP,GACnB,IAAMyD,EAAcjD,EACpBiD,EAAYrC,MAAQpB,EACpBoF,EAAe3B,GACf4B,EAAQ5B,IAGT,OACC7C,OAAAC,EAAA,EAAAD,CAACiG,EAAA,EAAD,KACCjG,OAAAC,EAAA,EAAAD,CAACkG,EAAA,EAAD,KACClG,OAAAC,EAAA,EAAAD,CAACmG,EAAA,EAAD,KACCnG,OAAAC,EAAA,EAAAD,CAACmG,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,MACpBrG,OAAAC,EAAA,EAAAD,CAACkG,EAAA,EAAD,CACCI,QACCtG,OAAAC,EAAA,EAAAD,CAACkG,EAAA,EAAD,CACCK,QAASrC,EAAWsC,SACpBC,SAAU,WAETvC,EAAWwC,UAEZ3F,MAAM,aAGR4F,MAAM,cAIR3G,OAAAC,EAAA,EAAAD,CAAC4G,EAAA,EAAD,CAAMZ,GAAG,WAAT,2BAEDhG,OAAAC,EAAA,EAAAD,CAAC6G,EAAA,EAAD,CACCjF,KAAM/B,GAAW,GACjBqD,QAASA,EACT4D,OAAM,kCAAA7D,OAAoCnD,GAC1CiH,oBACC/G,OAAAC,EAAA,EAAAD,CAACkG,EAAA,EAAD,KACClG,OAAAC,EAAA,EAAAD,CAACkG,EAAA,EAAD,CACCc,GAAG,eACHL,MAAM,SACNF,SAAU,SAACQ,IAhEK,SAACC,GACvBpD,GAAW,GACX,IAAMjB,EAAcjD,EACpBiD,EAAYZ,YAAciF,EAE1B1C,EAAe3B,GACfc,EAAcuD,GA2DPC,CAAeF,EAAMG,OAAOrG,QAE7BsG,WAAY,CACXC,eAAgBtH,OAAAC,EAAA,EAAAD,CAACuH,EAAAnH,EAAD,SAGlBJ,OAAAC,EAAA,EAAAD,CAACwH,EAAD,CACC1H,aAAcA,EACdH,WAAYA,EACZE,QAASA,GAAW,GACpBN,QAASA,EACTK,mBAAoBA,EACpBG,eAAgB8F,OAInBtG,QAASA,EACTkI,aAAc,SAAAC,IAzEG,SAACC,EAAoBC,GACzC9D,GAAW,GACX,IAAMjB,EAAcjD,EACpBiD,EAAYyB,MAAQqD,EACpB9E,EAAYwB,OAASuD,GAAS,GAC9BpD,EAAe3B,GACf4B,EAAQ5B,GAoEJgF,CAD2CH,EAA3BvE,SAA2BuE,EAAjBE,UAI5B5H,OAAAC,EAAA,EAAAD,CAACkG,EAAA,EAAD,KACClG,OAAAC,EAAA,EAAAD,CAACwH,EAAD,CACC1H,aAAcA,EACdH,WAAYA,EACZE,QAASA,GAAW,GACpBN,QAASA,EACTK,mBAAoBA,EACpBG,eAAgB8F","file":"static/js/5.894a31d9.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport * as React from \"react\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\"\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\"\nimport { TablePaginationPropTypes } from \"../../types\"\n\n// Function to check whether or not the forward page button should be disabled\nconst areMoreResults = (dataLength: number, pageNumber: number, results: number, limit: number, loading: boolean) => {\n\tconst current = (pageNumber - 1) * limit + dataLength\n\treturn loading ? false : results > current\n}\n// Function to check whether or not the back page button should be disabled\nconst areLessResults = (pageNumber: number, loading: boolean) => (loading ? false : pageNumber > 1)\n\nconst TablePagination = ({\n\tchangePage,\n\tcurrentQueryParams,\n\tpieData,\n\tloading,\n\ttotalResults,\n\tdisplayResults\n}: TablePaginationPropTypes) => (\n\t<React.Fragment>\n\t\t{displayResults}\n\t\t<IconButton\n\t\t\taria-label=\"Navigate Back a page\"\n\t\t\t// inherits parents color\n\t\t\tcolor=\"inherit\"\n\t\t\tonClick={() =>\n\t\t\t\tchangePage(areLessResults(currentQueryParams._page, loading) && currentQueryParams._page - 1)\n\t\t\t}\n\t\t\tdisabled={!areLessResults(currentQueryParams._page, loading)}\n\t\t>\n\t\t\t<KeyboardArrowLeft />\n\t\t</IconButton>\n\t\t<IconButton\n\t\t\tcolor=\"inherit\"\n\t\t\taria-label=\"Navigate forward a page\"\n\t\t\tonClick={() =>\n\t\t\t\tchangePage(\n\t\t\t\t\tareMoreResults(\n\t\t\t\t\t\tpieData ? pieData.length : 0,\n\t\t\t\t\t\tcurrentQueryParams._page,\n\t\t\t\t\t\ttotalResults,\n\t\t\t\t\t\tcurrentQueryParams._limit,\n\t\t\t\t\t\tloading\n\t\t\t\t\t) && currentQueryParams._page + 1\n\t\t\t\t)\n\t\t\t}\n\t\t\tdisabled={\n\t\t\t\t!areMoreResults(\n\t\t\t\t\tpieData ? pieData.length : 0,\n\t\t\t\t\tcurrentQueryParams._page,\n\t\t\t\t\ttotalResults,\n\t\t\t\t\tcurrentQueryParams._limit,\n\t\t\t\t\tloading\n\t\t\t\t)\n\t\t\t}\n\t\t>\n\t\t\t<KeyboardArrowRight />\n\t\t</IconButton>\n\t</React.Fragment>\n)\n\nexport default TablePagination\n","import { useState, useEffect } from \"react\"\n\n// Debounce Hook inspired by https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\n// Aim is to use the hook to watch a value for changes and only update after the timer finishes\n// Will reset timer on chnage\nconst useDebounce = (value: string, delay: number) => {\n\tconst [debouncedValue, setDebouncedValue] = useState(value)\n\n\tuseEffect(() => {\n\t\tconst handler = setTimeout(() => {\n\t\t\tsetDebouncedValue(value)\n\t\t}, delay)\n\t\treturn () => {\n\t\t\t// Resetting timer\n\t\t\tclearTimeout(handler)\n\t\t}\n\t}, [value])\n\n\treturn debouncedValue\n}\n\nexport default useDebounce\n","import { PieWithStore, TableRowData } from \"../types\"\n\n// Maps data from API to display\nconst mapData = (data: PieWithStore[]) => {\n\tconst displayData: TableRowData[] = []\n\tdata.forEach((pieItem: PieWithStore) => {\n\t\tconst TableRow: TableRowData = {\n\t\t\tdisplayName: pieItem.displayName,\n\t\t\tstoreName: pieItem.store.displayName,\n\t\t\tprice: pieItem.price,\n\t\t\tpriceString: pieItem.priceString,\n\t\t\taddress: pieItem.store.address,\n\t\t\tquantity: pieItem.quantity,\n\t\t\trating: pieItem.store.rating,\n\t\t\tcontact: pieItem.store.mobile\n\t\t}\n\t\tdisplayData.push(TableRow)\n\t})\n\treturn displayData\n}\n\nexport default mapData\n","import { QueryType } from \"../types\"\n// Small funciton to convert from queryParams to queryString\n// eslint-disable-next-line import/prefer-default-export\nexport const buildQueryString = (queryParams: QueryType) => {\n\tlet queryString = \"\"\n\t// Builds query string by going through each queryParam\n\tObject.entries(queryParams).forEach(item => {\n\t\tif (item[1] !== \"\") {\n\t\t\tqueryString += `&${item[0]}=${item[1]}`\n\t\t}\n\t})\n\treturn queryString\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\n\nimport { useState, useEffect } from \"react\"\nimport axios from \"axios\"\n// react-material-table is a package that I co-authored https://github.com/nwaywood/react-material-table\nimport Table from \"react-material-table\"\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport { Link } from \"react-router-dom\"\n// Theme hook to make use of Emotion theming.\nimport { useTheme } from \"../Theme/ThemeContext\"\nimport TablePagination from \"./TablePaginationContainer/TablePaginationContainer\"\nimport useDebounce from \"../util/useDebounce\"\nimport ErrorBoundary from \"../util/ErrorBoundry\"\nimport mapData from \"../util/mapData\"\n// Function I wrote to buld up the query string based on an Object\nimport { buildQueryString } from \"../util/util\"\n// Styled components\nimport {\n\tStyledFormControlLabel,\n\tStyledTextField,\n\tMainSection,\n\tTableFooter,\n\tTableHeader,\n\tStyledSwitch\n} from \"./HomeContainerComponents\"\n// Commonly used component\nimport { Flex } from \"../util/commonComponents\"\n// Typescript types\nimport { TableRowData, QueryType, EventType } from \"../types\"\n\n// Used by the table to determine the column data, display name and whether they should be sorted\nconst columns = [\n\t{\n\t\tdataName: \"displayName\",\n\t\ttitle: \"Pie  Name\",\n\t\tsort: true\n\t},\n\t{\n\t\tdataName: \"priceString\",\n\t\ttitle: \"Price\",\n\t\tsort: true\n\t},\n\t{\n\t\tdataName: \"quantity\",\n\t\ttitle: \"Quantity\",\n\t\tsort: true\n\t},\n\t{\n\t\tdataName: \"storeName\",\n\t\ttitle: \"Store Name\",\n\t\tsort: true\n\t},\n\t{ dataName: \"address\", title: \"Address\", sort: true },\n\t{ dataName: \"rating\", title: \"Rating\", sort: true },\n\t{ dataName: \"contact\", title: \"Mobile\", sort: true }\n]\n\nconst HomeContainer = () => {\n\t// Will store the data from pie.now\n\tconst [pieData, setPieData] = useState<TableRowData[]>()\n\t// Search term for pie name\n\tconst [searchTerm, setSearchTerm] = useState(\"\")\n\t// Whether the page should be in a loading state\n\tconst [loading, setLoading] = useState(true)\n\t// Total results from the header\n\tconst [totalResults, setTotalResults] = useState(0)\n\t// Theme hook using Emotion\n\tconst themeState = useTheme()\n\t// Query param object of all the query terms\n\tconst [currentQueryParams, setQueryParams] = useState<QueryType>({\n\t\t_order: \"\",\n\t\t_sort: \"\",\n\t\tdisplayName: \"\",\n\t\t_page: 1,\n\t\t_limit: 5\n\t})\n\t// Will always be searching for pies of the day\n\tconst baseUrl = \"https://pie.now.sh/pies?_expand=store&isPieOfTheDay=true\"\n\t// Function to get the pies. Sets loading initially and awaits the get request.\n\tconst getPies = async (queryParams: QueryType) => {\n\t\tsetLoading(true)\n\t\tconst result = await axios.get(baseUrl + buildQueryString(queryParams))\n\t\t// Map data converts response data into display data\n\t\tconst displayData = mapData(result.data)\n\t\tsetPieData(displayData)\n\t\tsetTotalResults(result.headers[\"x-total-count\"])\n\t\tsetLoading(false)\n\t}\n\t// Uses the debounce hook to wait on search term changes\n\tconst debouncedSearchTerm = useDebounce(searchTerm, 500)\n\n\t// Waits for a change for debounched search term. Aim is to wait for user to stop typing before firing next api call.\n\tuseEffect(() => {\n\t\tgetPies(currentQueryParams)\n\t}, [debouncedSearchTerm])\n\t// Called on input change to the search textfield\n\tconst searchFunction = (query: string) => {\n\t\tsetLoading(true)\n\t\tconst queryParams = currentQueryParams\n\t\tqueryParams.displayName = query\n\t\t// Updates query params\n\t\tsetQueryParams(queryParams)\n\t\tsetSearchTerm(query)\n\t}\n\t// Function that changes query params for the sorting\n\tconst sortFunction = (columnName: string, order?: string) => {\n\t\tsetLoading(true)\n\t\tconst queryParams = currentQueryParams\n\t\tqueryParams._sort = columnName\n\t\tqueryParams._order = order || \"\"\n\t\tsetQueryParams(queryParams)\n\t\tgetPies(queryParams)\n\t}\n\t// Gets the current viewed range of values. Calculates this based on query params, return results and total results\n\tconst getDisplayResults = () => {\n\t\tconst pieDataLength = pieData ? pieData.length : 0\n\t\tconst from = (currentQueryParams._page - 1) * currentQueryParams._limit\n\t\tconst to = from + pieDataLength\n\n\t\treturn `${from} to ${to}`\n\t}\n\t// Will change the page to any page. Intention was to use this if I had time to have page numbers down the bottom of the page\n\tconst changePage = (pageNumber: number) => {\n\t\tconst queryParams = currentQueryParams\n\t\tqueryParams._page = pageNumber\n\t\tsetQueryParams(queryParams)\n\t\tgetPies(queryParams)\n\t}\n\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<MainSection>\n\t\t\t\t<Flex>\n\t\t\t\t\t<Flex style={{ flex: \"1\" }}>\n\t\t\t\t\t\t<StyledFormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<StyledSwitch\n\t\t\t\t\t\t\t\t\tchecked={themeState.darkmode}\n\t\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\t\t// Toggles the dark/light mode.\n\t\t\t\t\t\t\t\t\t\tthemeState.toggle()\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tvalue=\"darkmode\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel=\"DarkMode\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Flex>\n\t\t\t\t\t{/* Links to the other route to show lazy loading*/}\n\t\t\t\t\t<Link to=\"example\">Test Lazy loaded route</Link>\n\t\t\t\t</Flex>\n\t\t\t\t<Table\n\t\t\t\t\tdata={pieData || []}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\theader={`Pies of the day Total Results: ${totalResults}`}\n\t\t\t\t\theaderCustomContent={\n\t\t\t\t\t\t<TableHeader>\n\t\t\t\t\t\t\t<StyledTextField\n\t\t\t\t\t\t\t\tid=\"search-field\"\n\t\t\t\t\t\t\t\tlabel=\"Search\"\n\t\t\t\t\t\t\t\tonChange={(event: EventType) => {\n\t\t\t\t\t\t\t\t\tsearchFunction(event.target.value)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\tstartAdornment: <SearchIcon />\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TablePagination\n\t\t\t\t\t\t\t\ttotalResults={totalResults}\n\t\t\t\t\t\t\t\tchangePage={changePage}\n\t\t\t\t\t\t\t\tpieData={pieData || []}\n\t\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t\t\tcurrentQueryParams={currentQueryParams}\n\t\t\t\t\t\t\t\tdisplayResults={getDisplayResults()}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableHeader>\n\t\t\t\t\t}\n\t\t\t\t\tloading={loading}\n\t\t\t\t\tsortCallback={({ dataName, order }: any) => {\n\t\t\t\t\t\tsortFunction(dataName, order)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<TableFooter>\n\t\t\t\t\t<TablePagination\n\t\t\t\t\t\ttotalResults={totalResults}\n\t\t\t\t\t\tchangePage={changePage}\n\t\t\t\t\t\tpieData={pieData || []}\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tcurrentQueryParams={currentQueryParams}\n\t\t\t\t\t\tdisplayResults={getDisplayResults()}\n\t\t\t\t\t/>\n\t\t\t\t</TableFooter>\n\t\t\t</MainSection>\n\t\t</ErrorBoundary>\n\t)\n}\n\nexport default HomeContainer\n"],"sourceRoot":""}