{"version":3,"sources":["Theme/theme.tsx","Theme/ThemeContext.tsx","App.tsx","serviceWorker.js","index.tsx","util/commonComponents.tsx","HomeContainer/HomeContainerComponents.tsx","util/ErrorBoundry.tsx"],"names":["themeLight","background","body","themeDark","theme","mode","ThemeContext","React","createContext","darkmode","toggle","useTheme","useContext","ThemeProvider","_ref","children","_useEffectDarkMode","_React$useState","useState","hasThemeMounted","_React$useState2","Object","slicedToArray","themeState","setThemeState","useEffect","isDark","localStorage","getItem","objectSpread","useEffectDarkMode","react_default","a","createElement","computedTheme","emotion_theming_browser_esm","Provider","value","setItem","JSON","stringify","HomeContainer","lazy","Promise","all","__webpack_require__","e","then","bind","ExampleRoute","WaitingComponent","Component","props","core_browser_esm","react","fallback","commonComponents","style","justifyContent","CircularProgress_default","charPoses","exit","opacity","y","enter","delay","charIndex","App","ErrorBoundry","HomeContainerComponents","react_pose_text_es","initialPose","pose","react_router_dom","react_router","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","NoSsr_default","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Flex","styled","div","_templateObject","StyledFormControlLabel","other","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_FormControlLabel__WEBPACK_IMPORTED_MODULE_5___default","assign","classes","label","StyledSwitch","_material_ui_core_Switch__WEBPACK_IMPORTED_MODULE_6___default","switchBase","checked","bar","_templateObject2","StyledTextField","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_4___default","InputLabelProps","root","InputProps","_Users_atargett_Example_React_App_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","className","underline","_templateObject3","TableHeader","_templateObject4","TableFooter","_templateObject5","TitleSection","_templateObject6","MainSection","_templateObject7","MainTitle","_templateObject8","Background","_templateObject9","ErrorBoundary","_this","_Users_atargett_Example_React_App_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_atargett_Example_React_App_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_atargett_Example_React_App_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","hasError","errorMessage","error","info","setState","_this$state","_emotion_core__WEBPACK_IMPORTED_MODULE_5__","_commonComponents__WEBPACK_IMPORTED_MODULE_8__","alignContent","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","flexDirection","href"],"mappings":"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","file":"static/js/main.b6723449.chunk.js","sourcesContent":["const white = \"#FFFFFF\"\nconst black = \"#161617\"\nconst gray = \"#F8F8F9\"\n\n// Light theme\nconst themeLight = {\n\tbackground: gray,\n\tbody: black\n}\n\n// Dark theme\nconst themeDark = {\n\tbackground: black,\n\tbody: white\n}\n\n//Based on currently set mode return the dark or light theme\nconst theme = (mode: string) => (mode === \"darkmode\" ? themeDark : themeLight)\n\nexport default theme\n","import React from \"react\"\nimport { ThemeProvider as EmotionThemeProvider } from \"emotion-theming\"\nimport theme from \"./theme\"\nimport { ThemeHookType } from \"../types\"\n// Inspired by https://medium.com/maxime-heckel/switching-off-the-lights-adding-dark-mode-to-your-react-app-with-context-and-hooks-f41da6e07269\n\n// Default data for the context\nconst defaultContextData = {\n\tdarkmode: false,\n\ttoggle: () => {}\n}\n\n// Creating context\nconst ThemeContext = React.createContext(defaultContextData)\n// Usetheme hook to be used throughout the app to update the theme\nconst useTheme = () => React.useContext(ThemeContext)\n\n// useEffectHook to store the current setting in local storage. This allows for persistance of chosen mode.\nconst useEffectDarkMode = () => {\n\tconst [themeState, setThemeState] = React.useState<ThemeHookType>({\n\t\tdarkmode: false,\n\t\thasThemeMounted: false\n\t})\n\tReact.useEffect(() => {\n\t\t// Storing to local storage. Allows users to refresh and not have their eyes be destroyed by the brightness of light mode\n\t\tconst isDark = localStorage.getItem(\"darkmode\") === \"true\"\n\t\tsetThemeState({\n\t\t\t...themeState,\n\t\t\tdarkmode: isDark,\n\t\t\thasThemeMounted: true\n\t\t})\n\t}, [])\n\n\treturn { themeState, setThemeState }\n}\n\n// The Context provider\nconst ThemeProvider = ({ children }: any) => {\n\tconst { themeState, setThemeState } = useEffectDarkMode()\n\n\tif (!themeState.hasThemeMounted) {\n\t\treturn <div />\n\t}\n\t// Toggle between modes\n\tconst toggle = () => {\n\t\tconst darkmode = !themeState.darkmode\n\t\t// Updating the local storage\n\t\tlocalStorage.setItem(\"darkmode\", JSON.stringify(darkmode))\n\t\tsetThemeState({ ...themeState, darkmode })\n\t}\n\n\tconst computedTheme = themeState.darkmode ? theme(\"darkmode\") : theme(\"light\")\n\n\treturn (\n\t\t<EmotionThemeProvider theme={computedTheme}>\n\t\t\t<ThemeContext.Provider\n\t\t\t\tvalue={{\n\t\t\t\t\tdarkmode: themeState.darkmode,\n\t\t\t\t\ttoggle\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</ThemeContext.Provider>\n\t\t</EmotionThemeProvider>\n\t)\n}\n\nexport { ThemeProvider, useTheme }\n","/* eslint-disable react/display-name */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React, { Suspense, lazy } from \"react\"\nimport { Route, Switch, HashRouter as Router } from \"react-router-dom\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport { Flex } from \"./util/commonComponents\"\nimport ErrorBoundary from \"./util/ErrorBoundry\"\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport SplitText from \"react-pose-text\"\nimport { MainTitle, TitleSection, Background } from \"./HomeContainer/HomeContainerComponents\"\nimport { DelayType } from \"./types\"\nconst HomeContainer = lazy(() => import(\"./HomeContainer/HomeContainer\"))\nconst ExampleRoute = lazy(() => import(\"./ExampleRoute/ExampleRoute\"))\n\n// Function that wraps the component in a React Suspense component. Provides a fallback Loading screen\nconst WaitingComponent = (Component: any) => {\n\t// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\treturn (props: any) => (\n\t\t<Suspense\n\t\t\t// Fallback UI displays a loading spinner while rendering\n\t\t\tfallback={\n\t\t\t\t<Flex style={{ justifyContent: \"center\" }}>\n\t\t\t\t\t<CircularProgress />\n\t\t\t\t</Flex>\n\t\t\t}\n\t\t>\n\t\t\t<Component {...props} />\n\t\t</Suspense>\n\t)\n}\nconst charPoses = {\n\texit: { opacity: 0, y: 20 },\n\tenter: {\n\t\topacity: 1,\n\t\ty: 0,\n\t\tdelay: ({ charIndex }: DelayType) => charIndex * 70\n\t}\n}\n\nconst App = () => (\n\t<ErrorBoundary>\n\t\t<Background>\n\t\t\t<TitleSection>\n\t\t\t\t<MainTitle>\n\t\t\t\t\t<SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n\t\t\t\t\t\tExample React App\n\t\t\t\t\t</SplitText>\n\t\t\t\t</MainTitle>\n\t\t\t</TitleSection>\n\t\t\t{/* Router for routes*/}\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" render={WaitingComponent(HomeContainer)} />\n\t\t\t\t\t<Route exact path=\"/Example\" render={WaitingComponent(ExampleRoute)} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</Background>\n\t</ErrorBoundary>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\")\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error)\n\t\t})\n}\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\")\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\"No internet connection found. App is running in offline mode.\")\n\t\t})\n}\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister()\n\t\t})\n\t}\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport NoSsr from \"@material-ui/core/NoSsr\"\nimport { ThemeProvider } from \"./Theme/ThemeContext\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport \"./index.css\"\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nReactDOM.render(\n\t<NoSsr>\n\t\t{/* Wrapping the App in the theme provider*/}\n\t\t<ThemeProvider>\n\t\t\t<App />\n\t\t</ThemeProvider>\n\t</NoSsr>,\n\tdocument.getElementById(\"root\")\n)\n\nserviceWorker.unregister()\n","import styled from \"@emotion/styled\"\n\n// eslint-disable-next-line import/prefer-default-export\nexport const Flex = styled.div`\n\tdisplay: flex;\n`\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport React from \"react\"\nimport styled from \"@emotion/styled\"\nimport TextField from \"@material-ui/core/TextField\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Switch from \"@material-ui/core/Switch\"\n\n// This file holds the styled components used in the Home Container\n\n// Using emotion with Material-ui is an interesting process. Since I am not overriding injection point of css\n// the && gives priority to the styles provided\n\n// Below is an example of creating a class and then passing it back into the function\n// Forwards other props back into the component\nconst StyledFormControlLabel = styled((other: any) => <FormControlLabel classes={{ label: \"label\" }} {...other} />)`\n\t&& {\n\t\t& .label {\n\t\t\tcolor: ${(props: any) => props.theme.body};\n\t\t}\n\t}\n`\n\nconst StyledSwitch = styled((other: any) => (\n\t<Switch\n\t\tclasses={{\n\t\t\tswitchBase: \"root\",\n\t\t\tchecked: \"root\",\n\t\t\tbar: \"bar\"\n\t\t}}\n\t\t{...other}\n\t/>\n))`\n\t&& {\n\t\t& .root {\n\t\t\tcolor: ${(props: any) => props.theme.body};\n\t\t}\n\t\t& .bar {\n\t\t\tbackground-color: ${(props: any) => props.theme.body} !important;\n\t\t}\n\t}\n`\n\nconst StyledTextField = styled((other: any) => (\n\t<TextField\n\t\tInputLabelProps={{\n\t\t\tclasses: {\n\t\t\t\troot: \"label\"\n\t\t\t}\n\t\t}}\n\t\t{...other}\n\t\tInputProps={{\n\t\t\tclassName: \"root\",\n\t\t\tclasses: {\n\t\t\t\tunderline: \"underline\"\n\t\t\t},\n\t\t\t...other.InputProps\n\t\t}}\n\t/>\n))`\n\t&& {\n\t\t& .root {\n\t\t\tcolor: ${(props: any) => props.theme.body} !important;\n\t\t}\n\t\t& .label {\n\t\t\tcolor: ${(props: any) => props.theme.body};\n\t\t}\n\t\t& .underline {\n\t\t\tborder-bottom-color: ${(props: any) => props.theme.body};\n\t\t\t&:hover {\n\t\t\t\tborder-bottom: solid 1px ${(props: any) => props.theme.body} !important;\n\t\t\t}\n\t\t\t&:after {\n\t\t\t\tborder-bottom-color: ${(props: any) => props.theme.body};\n\t\t\t}\n\t\t\t&:before {\n\t\t\t\tborder-bottom-color: ${(props: any) => props.theme.body};\n\t\t\t}\n\t\t}\n\t}\n`\nconst TableHeader = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n`\nconst TableFooter = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n`\n\nconst TitleSection = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n`\nconst MainSection = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\tflex-direction: column;\n`\nconst MainTitle = styled.div`\n\tfont-size: 80px;\n\tmax-height: 200px;\n`\n\nconst Background = styled.div`\n\tcolor: ${(props: any) => props.theme.body};\n\tbackground-color: ${(props: any) => props.theme.background};\n\twidth: 100%;\n\theight: 100vh;\n`\n\nexport {\n\tStyledFormControlLabel,\n\tStyledTextField,\n\tStyledSwitch,\n\tBackground,\n\tMainTitle,\n\tMainSection,\n\tTitleSection,\n\tTableFooter,\n\tTableHeader\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport React, { Component } from \"react\"\nimport { Card, CardContent } from \"@material-ui/core\"\nimport { ErrorBoundaryProps, ErrorBoundaryState } from \"../types\"\nimport { Flex } from \"./commonComponents\"\n// To catch errors and display a fallback UI.\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n\tconstructor(props: Readonly<ErrorBoundaryProps>) {\n\t\tsuper(props)\n\t\tthis.state = { hasError: false, errorMessage: \"\" }\n\t}\n\n\tstatic getDerivedStateFromError() {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { hasError: true }\n\t}\n\n\tcomponentDidCatch(error: any, info: any) {\n\t\t// Sets the error to the state\n\t\tthis.setState({ errorMessage: info, hasError: true })\n\t}\n\n\trender() {\n\t\tconst { errorMessage, hasError } = this.state\n\t\tconst { children } = this.props\n\t\tif (hasError) {\n\t\t\t// Fallback when there is an erro\n\t\t\treturn (\n\t\t\t\t<Flex style={{ justifyContent: \"center\", alignContent: \"center\" }}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Flex style={{ flexDirection: \"column\" }}>\n\t\t\t\t\t\t\t\t<div>Something went wrong :( </div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\tPlease raise an issue at{\" \"}\n\t\t\t\t\t\t\t\t\t<a href=\"https://github.com/AntTargett/Example-React-App\"> Github page</a>{\" \"}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>Error Message: {errorMessage}</div>\n\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</Flex>\n\t\t\t)\n\t\t}\n\t\t//Will render children if no error\n\t\treturn children\n\t}\n}\n\nexport default ErrorBoundary\n"],"sourceRoot":""}